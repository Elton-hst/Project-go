{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for using Swagger with Echo.",
        "title": "Swagger Example API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/api/v1",
    "paths": {
        "/product": {
            "post": {
                "description": "Add a new product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create product",
                "parameters": [
                    {
                        "description": "Product data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "schema": {
                            "$ref": "#/definitions/aggregate.Product"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "description": "Retorna os detalhes de um produto com base no ID fornecido.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Recupera um produto por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do produto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "schema": {
                            "$ref": "#/definitions/aggregate.Product"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "aggregate.Product": {
            "type": "object",
            "properties": {
                "categoryID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "pk": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "validity": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "rest.CreateProductRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "PK": {
                    "type": "string"
                },
                "Value": {
                    "type": "number"
                }
            }
        }
    }
}